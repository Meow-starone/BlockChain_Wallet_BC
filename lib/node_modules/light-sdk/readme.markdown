## 使用原生API接口

为了方便开发者使用调用原生API，我们提供了light-sdk模块，具体的使用方法如下：

1. 在源代码目录的lib目录执行：npm install -d --save light-sdk
2. 在需要使用light-sdk的js或者vue文件中使用如下代码：import LightSDK from “light-sdk”
3. 具体的使用指令及API文档参考这里；

### native接口

|功能描述|	调用方式|
|--|--|
|通过js添加导航栏按钮，目前允许在左右两边各加一个扩展按钮|LightSDK.native.addButton(params, cb)|
|通过js调用web返回事件|LightSDK.native.back(params, cb)|
|打开外部链接 （ 如电话，邮箱，短信 ）|LightSDK.native.openURL(params,cb)|
|native方法调用通用方法(用户根据已有native方法自己调用)|LightSDK.native.callNative(method, params, cb)|
|从相册中选择图片，可以自带拍照|LightSDK.native.chooseImage(params, cb)|
|清除沙盒缓存|LightSDK.native.clearWidget(params, cb)|
|通过js调用web关闭事件|LightSDK.native.close()|
|通过js接口在网页中删除存储在native的属性|LightSDK.native.deleteData(params, cb)|
|通过js接口在网页中返回指定URL的内容|LightSDK.native.fetchURL(params, cb)|
|文件预览|LightSDK.native.filePreview(params,cb)|
|文件保存|LightSDK.native.fileSave(params,cb)|
|返回指定字符串的二维码编码结果的base64编码字符串|LightSDK.native.genCode(params, cb)|
|获取剪切板信息|LightSDK.native.getClipBoardContent(params, cb)|
|通过网页js手机通讯录|LightSDK.native.getContactInfo(params, cb)|
|获取定位状态|LightSDK.native.getLocation(params, cb)|
|获取当前是否可获取定位状态|LightSDK.native.getLocationStatus(params, cb)|
|通过js接口获取当前网络状态|LightSDK.native.getNetworkStatus(params, cb)|
|获取页面性能数据|LightSDK.native.getPerformanceInfo(cb)|
|获取RegistrationID|LightSDK.native.pushGetRegistrationID(params, cb)|
|通过网页js获取客户端基本信息|LightSDK.native.getSystemInfo(params, cb)|
|获取设备唯一标识码|LightSDK.native.getUDID(params, cb)|
|获取客户端版本号|LightSDK.native.getVersion(null,cb);|
|设置导航栏透明度|LightSDK.native.headSetAlpha(params,cb)|
|通过js对web页上的图片进行本地化处理，比如保存至本地，识别图中二维码等。|LightSDK.native.imageAction(params, cb)|
|图片预览功能|LightSDK.native.imagePreview(params,cb)|
|获取是否含有手势或指纹验证信息|LightSDK.native.preVerifyOpeation(params,cb)|
|当前用户添加标签|LightSDK.native.pushAddTags(params,cb)|
|当前用户删除标签|LightSDK.native.pushDeleteTags(params,cb)|
|获取当前用户的所有标签|LightSDK.native.pushGetTags(params,cb)|
|向客户端传递推送alias|LightSDK.native.pushSetAlias(params,cb)|
|js接口在网页中查询存储在native的属性|LightSDK.native.readData(params, cb)|
|通过js删除已添加的导航栏按钮|LightSDK.native.removeButton(params, cb)|
|关闭安全键盘|LightSDK.native.safekeyboardHide(null,cb)|
|展现安全键盘|LightSDK.native.safekeyboardShow(null,cb)|
|通过js接口打开本地二维码扫描页面，扫码成功后在网页中返回扫码结果信息|LightSDK.native.scanCode(params, cb)|
|通过js修改导航栏背景色|LightSDK.native.setBackgroundColor(params, cb)|
|通过js接口在网页中复制内容到剪贴板|LightSDK.native.setClipBoardContent(params, cb)|
|设置沙盒缓存最大值|LightSDK.native.setMaxCacheSize(params, cb)|
|设置导航栏上下标题样式|LightSDK.native.setSubtitle(params,cb)|
|设置屏幕方向|LightSDK.native.setScreenOrientation(params, cb)|
|设置屏幕可旋转方向|LightSDK.native.setSupportScreenOrientation(params, cb)|
|通过js控制是否隐藏状态栏|LightSDK.native.setSystemStatusBar(params, cb)|
|设置标题栏标题接口|LightSDK.native.setTitle(params, cb)|
|通过js分享内容到各平台|LightSDK.native.socialShare(params, cb)|
|通过js登录到各平台|LightSDK.native.socialLogin(params,cb)|
|开始音频采集|LightSDK.native.startRecord(cb, maxTime)|
|结束音频采集|LightSDK.native.stopRecord()|
|关闭定位服务|LightSDK.native.stopLocation(params,cb)|
|通过js接口在网页中切换底部tab|LightSDK.native.switchTab(params, cb)|
|关闭交易键盘|LightSDK.native.tradekeyboardHide(params,cb)|
|展现交易键盘|LightSDK.native.tradekeyboardShow(params,cb)|
|通过js登录用户|LightSDK.native.userLogin(params,cb)|
|通过JS获取登录用户信息|LightSDK.native.userGetInfo(null,cb)|
|通过js设置登录用户信息|LightSDK.native.userSetInfo(params,cb)|
|通过JS退出用户登录|LightSDK.native.userlogout(cb)|
|用手势或指纹验证|LightSDK.native.verifyOpeation(params,cb)|
|通过js接口在网页中向native保存数据|LightSDK.native.writeData(params, cb)|



使用lightview扫描调试LightSDK接口的方法：

1. 将lightview和你电脑链接到同一网络，可以通过猎豹wifi助手等工具在PC上开启wifi，手机端链接此wifi
2. lightview扫描你电脑本地的开发地址，本地的开发地址必须以当前虚拟wifi的ip为准
3. lightview开调试按钮，扫描PC的本地地址后打开点击右上角菜单，并点击调试会自动跳转到具有native接口执行特性的webview然后就可以直接进行调试了，此时就是真实的运行环境。


### 平台接口

|功能描述|	调用方式|
|--|--|
|获取配置信息(注意：不再支持同步方法调用,仅支持全部参数返回)|LightSDK.config.get|
|获取openAPI接口token|LightSDK.openAPI.token|

```JavaScript
LightSDK.config.get(function(data){
    console.log(data)
})
LightSDK.openAPI.token(function(data){
    console.log(data)
})
```


### 升级注意事项

从低版本升级到高版本是注意检查功能是否完善，现版本有如下调整

1. scanCode增加了params入参，回调调整为第二个参数
2. 将writeGlobalData，readGlobalData调整为过期
3. 新增交易键盘、图片预览、文件预览接口
