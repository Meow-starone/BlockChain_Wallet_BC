function request(url,params,cb) {
    const xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function onReadyStateChange() {
        if (xhr.readyState === 4) {
            if (xhr.status === 200) {
                cb(JSON.parse(xhr.responseText));
            }else{
                console.error(xhr.status)
            }
        }
    };
    xhr.open('GET', `${url}?${parse2query(params)}`, true);
    xhr.send(null);
}

function parse2query(data) {
    let string = "";
    Object.keys(data).forEach(function (key) {
        string+=`${key}=${data[key]}&`
    });
    string=string.substring(0,string.length-1);
    return string;
}

let cid='',iid='';
let env = __ENV__;

//project.json中有个link_id可以复用成cid就不需要配置cid了
if(env&&env.link_id){
    cid = env.link_id;
}
const lightSdk = require("./native.js")
module.exports = {
    register:function (options) {
        console.error("此接口已经过期，将在下个版本移除！！！")
        cid = options.cid||"";
        iid = options.iid||"";
    },
    config:{
        get(cb){
            // 81083 light-sdk中config的信息本地化处理
            lightSdk.readData({
                key:"__LIGHT_configParams"
            },function(data){
                if(data&&data.data&&data.data.result){
                    cb(data.data.result);
                }else{
                    request("https://light.hscloud.cn/data/flatservice/param/getparams.json",{
                        compId:cid,
                        instanceId:iid,
                    },function(data){
                        cb(data.data);
                        if(data.data&&data.data!={}){
                            lightSdk.writeData({
                                key:"__LIGHT_configParams",
                                value:JSON.stringify(data.data)
                            });
                        }
                        
                    });
                }
            });
            
        }
    },
    openAPI:{
        token:function (cb) {
            return request("https://light.hscloud.cn/data/flatservice/openapi/token",{
                compId:cid
            },cb)
        }
    }
};